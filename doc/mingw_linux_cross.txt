How to make a cross compiler that can compile the Windows version
of TTDPatch on (e.g.) Linux

- this assumes you have cygwin installed in /mnt/d/cygwin and the TTDPatch
  source tree in /mnt/d/ttdpatch. Modify as appropriate.
- get the GNU binutils source, unpack, change to source dir
  (I used binutils-20041229-1-src.tar.bz2 from the cygwin archives)
- compile: (you may of course choose a different prefix path) 
	./configure --prefix=/usr/local/mingw-cross --target=i686-pc-mingw32
	make
	make install 
- setup the includes and libraries for mingw from your cygwin installation
	cd /usr/local/mingw-cross/i686-pc-mingw32
	mkdir -p include sys-include lib
	cp -a /mnt/d/cygwin/usr/include/mingw/* include
	cp -a /mnt/d/cygwin/usr/include/w32api/* sys-include
	cp -a /mnt/d/cygwin/lib/mingw/* lib
	cp -a /mnt/d/cygwin/lib/w32api/* lib
- get the gcc-core source, unpack, change to source dir
  (I used gcc-core-3.4.1-1-src.tar.bz2 from the cygwin archives, untared it,
   untared the gcc-core-3.4.1.tar.bz2 contained but didn't apply the patch)
- setup the path
	export PATH=$PATH:/usr/local/mingw-cross/bin
- compile it, pick the same prefix as above obviously:
	./configure --prefix=/usr/local/mingw-cross --target=i686-pc-mingw32
	make
	make install
- get the nasm sources, unpack, change to the source dir
- install the TTDPatch nasm patches
	zcat /mnt/d/ttdpatch/nasm/*.gz|patch -p1
- compile nasm (prefix /usr is safe, nasm doesn't need to be cross-compiling,
  the cross-compiler prefix is fine only if it's in the path before /usr/bin):
	./configure --prefix=/usr
	make
	make install
- in the TTDPatch Makefile, change CC and CPP to i686-pc-mingw32-gcc
- set up the binfmt feature to automatically run wine when trying to execute
  Windows executables (this is needed for makelang to work; else you need
  to change the Makefile to run makelang through wine explicitly)
- also remove the --binary option from the cat command lines in the Makefile

